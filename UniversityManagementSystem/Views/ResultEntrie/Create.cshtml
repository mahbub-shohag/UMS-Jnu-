@model UniversityManagementSystem.Models.ResultEntry

@*@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ResultEntry</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "CourseId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GradeId, "GradeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GradeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GradeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@



@{
    ViewBag.Title = "Result Entry";
}
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-1.8.2.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-ui-1.8.24.js" type="text/javascript"></script>
<h2>Result Entry</h2>
<h2 style="color: green">@TempData["success"]</h2>
<h3 style="color: red">@TempData["Already"]</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="editor-label">
            @Html.LabelFor(model => model.StudentId, "Student")
        </div>
        <div class="editor-field">
            @Html.DropDownList("StudentId", String.Empty)
            @Html.ValidationMessageFor(model => model.StudentId)
        </div>

        <div id="studentInfo">
            @Html.Partial("~/Views/Shared/_StudentInformation.cshtml")
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CourseId, "Course")
        </div>
        <div class="editor-field">
            @Html.Partial("_FilteredCourse")
            @Html.ValidationMessageFor(model => model.CourseId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.GradeId, "Grade")
        </div>
        <div class="editor-field">
            @Html.DropDownList("GradeId", String.Empty)
            @Html.ValidationMessageFor(model => model.GradeId)
        </div>
        <p>
            <br />
            <input type="submit" value="Save" class="btn btn-primary" />

        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    function FillData(id) {
        $('#studentInfo').load('@Url.Action("StudentInfoLoad")', { studentId: id });
        $('#CourseId').load('@Url.Action("CourseLoad")', { studentId: id });
    }

    $(function () {
        $('#StudentId').change(function () {
            var id = $('#StudentId').val();
            FillData(id);
        });
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
